require('@babel/register') // This enables us to require files that are exported as ES6.

const fs = require('fs')
const sassExtract = require('sass-extract')
const createSassExtractJsPlugin = require('sass-extract-js/lib/plugin')
const nodeDir = require('node-dir')

const { REGULAR_EXPRESSIONS } = require('../src/assets/scripts/constants/regular-expressions')

const outputFilePath = 'src/config/scss-config.js'
const pixelValueRegExp = new RegExp(REGULAR_EXPRESSIONS.PIXEL_VALUE_AS_QUOTED_STRING, 'g')
const settingsFolder = 'src/assets/styles/settings/'
const files = nodeDir.files(settingsFolder, { sync: true })

const ignoredFiles = [
  '_settings.config.scss',
  '_settings.status.scss'
]

let scssVars = {}

files
  .filter((fullPath) => {
    const fileName = fullPath.split(settingsFolder)[1]
    return !ignoredFiles.includes(fileName)
  })
  .forEach((fileName) => {
    const vars = sassExtract.renderSync({
      file: fileName
    }, {
      plugins: [createSassExtractJsPlugin()]
    }).vars

    scssVars = {
      ...scssVars,
      ...vars
    }
  })

// Convert object to string so we can write it to the output file.
scssVars = JSON.stringify(scssVars, null, 2)

// Convert pixel values to integers.
// Example: "200px" => 200
scssVars = scssVars.replace(pixelValueRegExp, '$1')

/* eslint-disable */
fs.writeFile(
  outputFilePath,

`// THIS FILE IS AUTOMATICALLY GENERATED!
// See: runscripts/extract-scss-variables.js

/* eslint-disable */
module.exports = ${scssVars}
/* eslint-enable */
`,
  function (error) {
    if (error) throw error
  }
)
/* eslint-enable */

console.log(`✅️  Done: Extracted SCSS variables to ${outputFilePath}`)
